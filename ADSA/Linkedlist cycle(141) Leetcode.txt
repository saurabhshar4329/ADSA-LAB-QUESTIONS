public class Solution {
    public boolean hasCycle(ListNode head) {
        if (head == null || head.next == null) {
            return false;
        }

        ListNode slow = head;
        ListNode fast = head;

        while (fast != null && fast.next != null) {
            slow = slow.next;         // move by 1
            fast = fast.next.next;    // move by 2

            if (slow == fast) {       // pointers meet => cycle exists
                return true;
            }
        }

        return false; // reached null => no cycle
    }
}
